# üöÄ Quick Start - Production Deployment

**Copilot addition: deployment prep** - Get TikTalk running in production in under 5 minutes.

---

## ‚ö° Fastest Path to Production

### Option 1: Docker Compose (Recommended)

```bash
# 1. Clone repository
git clone https://github.com/opsecdemon3/TikTalk.git
cd TikTalk

# 2. Configure environment
cp .env.example .env
# Edit .env with your settings

# 3. Start all services
docker-compose up -d

# 4. Verify deployment
python scripts/verify_deployment.py

# 5. Access application
# Frontend: http://localhost:5001
# API: http://localhost:8000
# API Docs: http://localhost:8000/docs
```

**Done!** TikTalk is now running.

---

### Option 2: Manual Setup

```bash
# 1. Backend
python3 -m venv venv
source venv/bin/activate
pip install -r requirements.txt
python -m spacy download en_core_web_sm
python api_server.py

# 2. Frontend (new terminal)
cd synapse-ai-learning-main
npm install
npm run dev

# 3. Verify
# Visit http://localhost:5001
```

---

## üåê Deploy to Cloud Platform

### Render.com (Easiest)

1. Connect GitHub repository
2. Create **Web Service** for backend:
   - Build: `pip install -r requirements.txt && python -m spacy download en_core_web_sm`
   - Start: `python api_server.py`
3. Create **Static Site** for frontend:
   - Build: `cd synapse-ai-learning-main && npm install && npm run build`
   - Publish: `synapse-ai-learning-main/dist`
4. Set environment variable `VITE_API_BASE` to your API URL

### Fly.io (Most Control)

```bash
# Install flyctl
curl -L https://fly.io/install.sh | sh

# Deploy
fly launch
fly deploy
```

### Heroku (Classic)

```bash
heroku create tiktalk-app
git push heroku main
heroku open
```

---

## üìö Full Documentation

- **DEPLOYMENT_GUIDE.md** - Complete deployment instructions
- **PRODUCTION_READINESS.md** - Implementation summary
- **ARCHITECTURE_DEEP_DIVE.md** - System architecture
- **FEATURES_AND_CAPABILITIES.md** - Feature documentation
- **TECHNICAL_SPECIFICATIONS.md** - Technical details

---

## ‚úÖ Health Check

After deployment, verify TikTalk is healthy:

```bash
# Run verification script
python scripts/verify_deployment.py

# Or test manually
curl http://localhost:8000/api/verify/system
```

Expected response:
```json
{
  "status": "healthy",
  "version": "3.0.0",
  "search_engine": "initialized"
}
```

---

## üêõ Quick Troubleshooting

**API won't start?**
```bash
# Check Python version (must be 3.10+)
python3 --version

# Check if port is available
lsof -i :8000
```

**Frontend can't connect?**
```bash
# Check VITE_API_BASE
echo $VITE_API_BASE

# Test API directly
curl http://localhost:8000/api/verify/system
```

**Docker issues?**
```bash
# Rebuild from scratch
docker-compose down -v
docker-compose build --no-cache
docker-compose up -d
```

---

## üìû Need Help?

- Full guide: See **DEPLOYMENT_GUIDE.md**
- Issues: https://github.com/opsecdemon3/TikTalk/issues
- API Docs: http://localhost:8000/docs

---

**Status**: ‚úÖ Production Ready  
**Time to Deploy**: ~5 minutes  
**Complexity**: Minimal  

*Copilot addition: deployment prep*
